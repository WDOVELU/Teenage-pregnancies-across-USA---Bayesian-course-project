# ts_high_all <- matrix(NA, nrow = length(state), ncol = 29)
# ts_post_all <- matrix(NA, nrow = length(state), ncol = 29)
# ts_high_diff <- matrix(NA, nrow = length(state), ncol = 26)
# ts_post_diff <- matrix(NA, nrow = length(state), ncol = 26)
# ts_high_pred <- matrix(NA, nrow = length(state), ncol = 26)
# ts_post_pred <- matrix(NA, nrow = length(state), ncol = 26)
load("mse_usa.dat")
load("ts_high_all.dat")
load("ts_post_all.dat")
load("ts_high_diff.dat")
load("ts_post_diff.dat")
load("ts_high_pred.dat")
load("ts_post_pred.dat")
# for (s in 1:length(state)) {
#   ts_high_all[s,] <- Yh_s <- BIRTH_data$State.Rate[BIRTH_data$State == state[s] & BIRTH_data$Age.Group..Years. == "15-17 years"]
#   ts_post_all[s,] <- Yp_s <- BIRTH_data$State.Rate[BIRTH_data$State == state[s] & BIRTH_data$Age.Group..Years. == "18-19 years"]
#   Y_real <- cbind(Yh_s, Yp_s)
#
#   Y_3rddiff <- diff(Y_real,diff=3)
#   ts_high_diff[s,] <- Y_3rddiff[,1]
#   ts_post_diff[s,] <- Y_3rddiff[,2]
#   Y_out_s <- Y_3rddiff[1,]
#   res_h <- rep(NA, N_try)
#   res_p <- rep(NA, N_try)
#
#   for (i in 1:N_try) {
#     if(i == 1){
#       res_h[i] <- rnorm(1, p[1] + p[2] * Y_out_s[1], sqrt(p[4]))
#       res_p[i] <- rnorm(1, p[1] + p[3] * Y_out_s[2], sqrt(p[5]))
#     } else {
#       res_h[i] <- rnorm(1, p[1] + p[2] * res_h[i-1], sqrt(p[4]))
#       res_p[i] <- rnorm(1, p[1] + p[3] * res_p[i-1], sqrt(p[5]))
#     }
#   }
#
#   Y_out_s <- rbind(Y_out_s, cbind(res_h,res_p))
#   ts_high_pred[s,] <- Y_out_s[,1]
#   ts_post_pred[s,] <- Y_out_s[,2]
#   mse_h <- MSE(Y_out_s[,1], Y_3rddiff[,1])
#   mse_p <- MSE(Y_out_s[,2], Y_3rddiff[,2])
#   mse_tot[s,] <- c(mse_h, mse_p)
#
# }
#
# row.names(mse_tot) <- state
# colnames(mse_tot) <- c("mse high", "mse post-high")
# save(mse_tot, file="mse_usa.dat")
# save(ts_high_all, file="ts_high_all.dat")
# save(ts_post_all, file="ts_post_all.dat")
# save(ts_high_diff, file="ts_high_diff.dat")
# save(ts_post_diff, file="ts_post_diff.dat")
# save(ts_high_pred, file="ts_high_pred.dat")
# save(ts_post_pred, file="ts_post_pred.dat")
mse_tot
m_high <- min(mse_tot[,1]) #Virginia
m_post <- min(mse_tot[,2]) #Ohio
# Minimum mse:
ggplot(data.frame(x = 1:26), y = ts_high_pred[mse_tot[,1] == m_high,]) +
geom_line(data = data.frame(Y = ts_high_pred[mse_tot[,1] == m_high,], x = 1:26),
aes(x = x, y = Y, col = "Simulated data"), lty = 2) +
geom_line(data = data.frame(Y = ts_high_diff[mse_tot[,1] == m_high,], x = 1:26),
aes(x = x, y = Y, col = "Real data")) + theme_bw() + scale_color_discrete(name="Legend") +
ggtitle("Forecasting on Virginia State for Highschool")
ggplot(data.frame(x = 1:26), y = ts_post_diff[mse_tot[,2] == m_post,]) +
geom_line(data = data.frame(Y = ts_post_diff[mse_tot[,2] == m_post,], x = 1:26),
aes(x = x, y = Y, col = "Simulated data"), lty = 2) +
geom_line(data = data.frame(Y = ts_post_pred[mse_tot[,2] == m_post,], x = 1:26),
aes(x = x, y = Y, col = "Real data")) + theme_bw() + scale_color_discrete(name="Legend") +
ggtitle("Forecasting on Ohio State for Post-Highschool")
# BAD mse but state is close to missouri
ggplot(data.frame(x = 1:26), y = ts_post_diff[state == "Nebraska",]) +
geom_line(data = data.frame(Y = ts_post_diff[state == "Nebraska",], x = 1:26),
aes(x = x, y = Y), lty = 2, col = "red") +
geom_line(data = data.frame(Y = ts_post_pred[state == "Nebraska",], x = 1:26),
aes(x = x, y = Y), col = "blue") + theme_bw() +
ggtitle("Forecasting on Nebraska State for Post-Highschool")
# GOOD mse but state is far away from missouri
ggplot(data.frame(x = 1:26), y = ts_high_pred[state == "Oregon",]) +
geom_line(data = data.frame(Y = ts_high_pred[state == "Oregon",], x = 1:26),
aes(x = x, y = Y), lty = 2, col = "red") +
geom_line(data = data.frame(Y = ts_high_diff[state == "Oregon",], x = 1:26),
aes(x = x, y = Y), col = "blue") + theme_bw() +
ggtitle("Forecasting on Oregon State for Highschool")
# the most weird mse
ggplot(data.frame(x = 1:26), y = ts_high_pred[state == "District of Columbia",]) +
geom_line(data = data.frame(Y = ts_high_pred[state == "District of Columbia",], x = 1:26),
aes(x = x, y = Y), lty = 2, col = "red") +
geom_line(data = data.frame(Y = ts_high_diff[state == "District of Columbia",], x = 1:26),
aes(x = x, y = Y), col = "blue") + theme_bw() +
ggtitle("Forecasting on State District of Columbia for Highschool")
#-------------------------------
data <- t(ts_high_all)
length(state)
colnames(data) <- state
write.csv(data, 'highschool_ts.csv')
data_diff <- t(ts_high_diff)
colnames(data_diff) <- state
write.csv(data_diff, 'highschool_ts_diff.csv')
library(rstan)
library(coda)
library(tseries)
library(ggplot2)
library(tidyr)
library(dplyr)
library(purrr)
library(ggsci)
require(gplots)
require(ggpubr)
library(readxl)
library(Metrics)
library(MLmetrics)
set.seed(14)
diff_to_timeseries <- function(y_last, y_1stdiff_pred) {
a<- y_last
y_dix_pred <-rep(0,length(y_1stdiff_pred))
for (i in 1:length(y_1stdiff_pred)){
y_dix_pred[i] <- a + y_1stdiff_pred[i]
a <- y_dix_pred[i]
}
return(y_dix_pred)
}
# Dataset construction
mydata <- read_excel("data.xlsx")
pwd
getwd()
# install.packages("USAboundaries")
# install.packages("CARBayesST")
library(CARBayesST)
library(spdep)
library(maptools)
library(sp)
library(CARBayesdata)
library(USAboundaries)
library(sf)
library(dplyr)
library(ggplot2)
library(MLmetrics)
library(LaplacesDemon)
# setwd("G:/Bayesian_project_final/2_CARBayesST")
library(readxl)
mydata <- read_excel("data.xlsx")
BIRTH_data <- data.frame(mydata)
# removing isolated States
birthdata_hs <- subset(BIRTH_data, BIRTH_data$Age.Group..Years. == "15-17 years")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Total U.S.")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Hawaii")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Alaska")
birthdata_hs <- birthdata_hs[,c(2,1,5,4)]
### Construct the SpatialPolygonsDataFrame
require(maps)
require(sp)
require(maptools)
require(tmap)
require(cartogram)
# Lower case letters for all states, in order to merge them with the map
mydata <- birthdata_hs
mydata <- data.frame(lapply(mydata, function(v) {
if (is.character(v)) return(tolower(v))
else return(v)
}))
# Lower case letters for all states, in order to merge them with the map
mydata <- birthdata_hs
# removing isolated States
birthdata_hs <- subset(BIRTH_data, BIRTH_data$Age.Group..Years. == "15-17 years")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Total U.S.")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Hawaii")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Alaska")
birthdata_hs <- birthdata_hs[,c(2,1,5,4)]
mydata <- read_excel("data.xlsx")
getwd()
# install.packages("USAboundaries")
# install.packages("CARBayesST")
library(CARBayesST)
library(spdep)
library(maptools)
library(sp)
library(CARBayesdata)
library(USAboundaries)
library(sf)
library(dplyr)
library(ggplot2)
library(MLmetrics)
library(LaplacesDemon)
# setwd("G:/Bayesian_project_final/2_CARBayesST")
library(readxl)
mydata <- read_excel("data.xlsx")
########################################################################
########################################################################
######################### BAY PROJECT ##################################
######################    CARBayesST     ###############################
########################################################################
#### Spatio-Temporal model for Highschool age
########################################################################
# install.packages("USAboundaries")
# install.packages("CARBayesST")
library(CARBayesST)
library(spdep)
library(maptools)
library(sp)
library(CARBayesdata)
library(USAboundaries)
library(sf)
library(dplyr)
library(ggplot2)
library(MLmetrics)
library(LaplacesDemon)
# setwd("G:/Bayesian_project_final/2_CARBayesST")
library(readxl)
mydata <- read_excel("data.xlsx")
BIRTH_data <- data.frame(mydata)
# removing isolated States
birthdata_hs <- subset(BIRTH_data, BIRTH_data$Age.Group..Years. == "15-17 years")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Total U.S.")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Hawaii")
birthdata_hs <- subset(birthdata_hs, birthdata_hs$State != "Alaska")
birthdata_hs <- birthdata_hs[,c(2,1,5,4)]
### Construct the SpatialPolygonsDataFrame
require(maps)
require(sp)
require(maptools)
require(tmap)
require(cartogram)
mydata <- data.frame(lapply(mydata, function(v) {
if (is.character(v)) return(tolower(v))
else return(v)
}))
IDs <- sapply(strsplit(usa$names, ":"), function(x) x[1])
usa <- map2SpatialPolygons(usa, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
# Lower case letters for all states, in order to merge them with the map
mydata <- birthdata_hs
# Get a SpatialPolygonsDataFrame of US states
usa <- map("state", fill = TRUE)
usa@data = data.frame(usa@data, mydata[match(usa@data[,'unique.IDs.'], mydata[,'State' ]),])
usa <- SpatialPolygonsDataFrame(usa,
data = data.frame(unique(IDs),
row.names = unique(IDs)) )
usa.data.combined = usa
# remove NAs from the dataset
usa.data.combined@data <- usa.data.combined@data[complete.cases(usa.data.combined@data), ]
spplot(usa.data.combined[, "State.Rate"], main = "Birth rate" )
### Constuct binary neighbourhood matrix W
W.nb <- poly2nb(usa.data.combined, row.names = unique(IDs)) # neighbourhood
W <- nb2mat(W.nb, style = "B")
dim(W) # matrix of dimension 49 x 49
W[7:15,7:15]
W_nodoc <- W[c(-8),c(-8)]
W_nodoc[7:15,7:15]
K<-49 # number of states
N<-29 # number of years
### Third order differences - Stationnarisation and fixing the state order which was not always the same
dif3rate <- rep(0,K*(N-3)) # vector of third differences of State.Rate
shifrate <- rep(0,K*(N-3)) # State.Rate shifted by 3 years
fix_rate <- rep(0,K*N)
states <- mydata$State[1:49]
for (i in c(1:49))
{
state <- states[i]
state_subset <- subset(mydata, mydata$State == state)
rate <- state_subset$State.Rate
dif3 <- diff(rate,diff=3)
shif <- rate[c(4:29)]
for (j in c(0:25))
{
dif3rate[i + K*j] <- dif3[j+1]
shifrate[i + K*j] <- shif[j+1]
}
for (j in c(0:28))
{
fix_rate[i + K*j] <- rate[j+1]
}
}
years <- c(rep(1990,49),rep(1991,49),rep(1992,49),rep(1993,49),rep(1994,49),rep(1995,49)
,rep(1996,49),rep(1997,49),rep(1998,49),rep(1999,49),rep(2000,49),rep(2001,49)
,rep(2002,49),rep(2003,49),rep(2004,49),rep(2005,49),rep(2006,49),rep(2007,49)
,rep(2008,49),rep(2009,49),rep(2010,49),rep(2011,49),rep(2012,49),rep(2013,49)
,rep(2014,49),rep(2015,49),rep(2016,49),rep(2017,49),rep(2018,49))
shif_years <- years[c((49*3+1):(49*N))] # years vector, without the first three years
mydata_staz <- data.frame(rep(states,26),shif_years,dif3rate,shifrate) # new dataframe
mydata_fix <- data.frame(rep(states,29),years,fix_rate)
### Moran I for each year for raw Rates.
moranI_years <- rep(0,29)
for (i in c(1990:2018))
{
moran_subset <- subset(mydata_fix, years == i)
mt <- moran.test(moran_subset$fix_rate,nb2listw(W.nb,style = "B"))
moranI_years[i-1989] <- mt$estimate[1]
}
plot(c(1990:2018),moranI_years,main = 'Morans I over Years for raw data',
xlab='Years', ylab='Morans I',ylim = c(-0.1,0.6), pch = 19, col='blue')
abline(h=0, pch=10, col="black", lwd=2, lty=2)
### Moran I for each year for 3rd differences
moranI_years <- rep(0,26)
for (i in c (1993:2018))
{
moran_subset <- subset(mydata_staz, mydata$Year == i)
mt <- moran.test(moran_subset$dif3rate,nb2listw(W.nb,style = "B"))
moranI_years[i-1992] <- mt$estimate[1]
}
plot(c(1993:2018),moranI_years, main = 'Morans I over Years for stationarize data',
xlab='Years', ylab='Morans I',ylim = c(-0.1,0.6), pch = 19, col='red')
abline(h=0, pch=10, col="black", lwd=2, lty=2)
### How "far" should we reach for  neighbours
library(rgeos)
centroids <- gCentroid(usa,byid=T)
nb_knn7 <- knn2nb((knearneigh(centroids,k=7)))
sp_corG <- sp.correlogram(nb_knn7,usa.data.combined@data$State.Rate, order = 7,
zero.policy = TRUE, style = 'B', method = 'I')
library(rgeos)
centroids <- gCentroid(usa,byid=T)
nb_knn7 <- knn2nb((knearneigh(centroids,k=7)))
sp_corG <- sp.correlogram(nb_knn7,usa.data.combined@data$State.Rate, order = 7,
zero.policy = TRUE, style = 'B', method = 'I')
plot(sp_corG, main = 'Spatial correlogram for Birth rates in States', ylab="Morans'I")
### Spatial modelling with CARBayesST : ST.CARar on Highschool raw data
set.seed(1200)
formula1 <- fix_rate ~ fix_rate
chain1 <- ST.CARar(formula = formula1, family = "gaussian",
data = mydata_fix, W = W, burnin = 20000, n.sample = 220000,
thin = 100)
# Posterion inference
print(chain1)
x11()
W.nb <- poly2nb(usa.data.combined, row.names = unique(IDs)) # neighbourhood
W <- nb2mat(W.nb, style = "B")
dim(W) # matrix of dimension 49 x 49
W[7:15,7:15]
W_nodoc <- W[c(-8),c(-8)]
W_nodoc[7:15,7:15]
K<-49 # number of states
# Get a SpatialPolygonsDataFrame of US states
usa <- map("state", fill = TRUE)
IDs <- sapply(strsplit(usa$names, ":"), function(x) x[1])
usa <- map2SpatialPolygons(usa, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
usa <- SpatialPolygonsDataFrame(usa,
data = data.frame(unique(IDs),
row.names = unique(IDs)) )
usa@data = data.frame(usa@data, mydata[match(usa@data[,'unique.IDs.'], mydata[,'State' ]),])
usa.data.combined = usa
# remove NAs from the dataset
usa.data.combined@data <- usa.data.combined@data[complete.cases(usa.data.combined@data), ]
spplot(usa.data.combined[, "State.Rate"], main = "Birth rate" )
### Constuct binary neighbourhood matrix W
W.nb <- poly2nb(usa.data.combined, row.names = unique(IDs)) # neighbourhood
W <- nb2mat(W.nb, style = "B")
dim(W) # matrix of dimension 49 x 49
W[7:15,7:15]
W_nodoc <- W[c(-8),c(-8)]
W_nodoc[7:15,7:15]
K<-49 # number of states
N<-29 # number of years
### Third order differences - Stationnarisation and fixing the state order which was not always the same
dif3rate <- rep(0,K*(N-3)) # vector of third differences of State.Rate
shifrate <- rep(0,K*(N-3)) # State.Rate shifted by 3 years
fix_rate <- rep(0,K*N)
states <- mydata$State[1:49]
for (i in c(1:49))
{
state <- states[i]
state_subset <- subset(mydata, mydata$State == state)
rate <- state_subset$State.Rate
dif3 <- diff(rate,diff=3)
shif <- rate[c(4:29)]
for (j in c(0:25))
{
dif3rate[i + K*j] <- dif3[j+1]
shifrate[i + K*j] <- shif[j+1]
}
for (j in c(0:28))
{
fix_rate[i + K*j] <- rate[j+1]
}
}
years <- c(rep(1990,49),rep(1991,49),rep(1992,49),rep(1993,49),rep(1994,49),rep(1995,49)
,rep(1996,49),rep(1997,49),rep(1998,49),rep(1999,49),rep(2000,49),rep(2001,49)
,rep(2002,49),rep(2003,49),rep(2004,49),rep(2005,49),rep(2006,49),rep(2007,49)
,rep(2008,49),rep(2009,49),rep(2010,49),rep(2011,49),rep(2012,49),rep(2013,49)
,rep(2014,49),rep(2015,49),rep(2016,49),rep(2017,49),rep(2018,49))
shif_years <- years[c((49*3+1):(49*N))] # years vector, without the first three years
mydata_staz <- data.frame(rep(states,26),shif_years,dif3rate,shifrate) # new dataframe
mydata_fix <- data.frame(rep(states,29),years,fix_rate)
W
### Spatial modelling with CARBayesST : ST.CARar on Post Higschool raw data
set.seed(1200)
formula1 <- fix_rate ~ fix_rate
chain1 <- ST.CARar(formula = formula1, family = "gaussian",
data = mydata_fix, W = W, burnin = 20000, n.sample = 220000,
thin = 100)
## IDAHO is completely NA
mydata_fixNA<-mydata_fix
# idaho in number 11, putting all years to NA
for (i in 0:28)
{
mydata_fixNA$fix_rate[11+K*i]<-NA
}
formula1NA <- fix_rate ~ fix_rate
chain1NA_idaho <- ST.CARar(formula = formula1NA, family = "gaussian",
data = mydata_fixNA, W = W, burnin = 20000, n.sample = 220000,
thin = 100)
low <- high <- idahoNA <- rep(0,29)
for (i in 0:28)
{
idahoNA[i+1] <-fitted.values(chain1NA_idaho)[11+K*i]
low[i+1] <- p.interval(chain1NA_idaho$samples$fitted[,11+K*i],
HPD=TRUE, MM=TRUE, prob=0.95, plot=FALSE, PDF=FALSE)[1]
high[i+1] <- p.interval(chain1NA_idaho$samples$fitted[,11+K*i],
HPD=TRUE, MM=TRUE, prob=0.95, plot=FALSE, PDF=FALSE)[2]
}
idaho_measures <- subset(mydata_fix, mydata_fix$rep.states..29. == "idaho")
idaho<-data.frame(idaho_measures,low,idahoNA,high)
ggplot(data.frame(x = 1990:2018, y = idaho$idahoNA, ylow = idaho$low, yup = idaho$high) ) +
geom_line(aes(x = x, y = y), lty = 2, col = "red") + theme_bw() +
geom_line(data = data.frame(Y = idaho$fix_rate, x = 1990:2018), aes(x = x, y = Y), col = "blue") +
geom_ribbon(aes(ymin = ylow, ymax = yup, x = x), alpha = 0.1, col="lightblue") +
ggtitle("Observed vs sampled Idaho Birth rate values")
low <- high <- idahoNA <- rep(0,29)
for (i in 0:28)
{
idahoNA[i+1] <-fitted.values(chain1NA_idaho)[11+K*i]
low[i+1] <- p.interval(chain1NA_idaho$samples$fitted[,11+K*i],
HPD=TRUE, MM=TRUE, prob=0.95, plot=FALSE, PDF=FALSE)[1]
high[i+1] <- p.interval(chain1NA_idaho$samples$fitted[,11+K*i],
HPD=TRUE, MM=TRUE, prob=0.95, plot=FALSE, PDF=FALSE)[2]
}
idaho_measures <- subset(mydata_fix, mydata_fix$rep.states..29. == "idaho")
idaho<-data.frame(idaho_measures,low,idahoNA,high)
idaho_measures
low
idahoNA
high
idaho_measures
View(idaho_measures)
View(idaho_measures)
mydata_fix
mydata <- data.frame(lapply(mydata, function(v) {
if (is.character(v)) return(tolower(v))
else return(v)
}))
mydata
mydata_fixNA<-mydata_fix
# idaho in number 11, putting all years to NA
for (i in 0:28)
{
mydata_fixNA$fix_rate[11+K*i]<-NA
}
low <- high <- idahoNA <- rep(0,29)
for (i in 0:28)
{
idahoNA[i+1] <-fitted.values(chain1NA_idaho)[11+K*i]
low[i+1] <- p.interval(chain1NA_idaho$samples$fitted[,11+K*i],
HPD=TRUE, MM=TRUE, prob=0.95, plot=FALSE, PDF=FALSE)[1]
high[i+1] <- p.interval(chain1NA_idaho$samples$fitted[,11+K*i],
HPD=TRUE, MM=TRUE, prob=0.95, plot=FALSE, PDF=FALSE)[2]
}
idaho_measures <- subset(mydata_fix, mydata_fix$rep.states..29. == "idaho")
idaho<-data.frame(idaho_measures,low,idahoNA,high)
mydata_fix
### Constuct binary neighbourhood matrix W
W.nb <- poly2nb(usa.data.combined, row.names = unique(IDs)) # neighbourhood
W <- nb2mat(W.nb, style = "B")
dim(W) # matrix of dimension 49 x 49
W[7:15,7:15]
W_nodoc <- W[c(-8),c(-8)]
W_nodoc[7:15,7:15]
K<-49 # number of states
N<-29 # number of years
### Third order differences - Stationnarisation and fixing the state order which was not always the same
dif3rate <- rep(0,K*(N-3)) # vector of third differences of State.Rate
shifrate <- rep(0,K*(N-3)) # State.Rate shifted by 3 years
fix_rate <- rep(0,K*N)
states <- mydata$State[1:49]
for (i in c(1:49))
{
state <- states[i]
state_subset <- subset(mydata, mydata$State == state)
rate <- state_subset$State.Rate
dif3 <- diff(rate,diff=3)
shif <- rate[c(4:29)]
for (j in c(0:25))
{
dif3rate[i + K*j] <- dif3[j+1]
shifrate[i + K*j] <- shif[j+1]
}
for (j in c(0:28))
{
fix_rate[i + K*j] <- rate[j+1]
}
}
years <- c(rep(1990,49),rep(1991,49),rep(1992,49),rep(1993,49),rep(1994,49),rep(1995,49)
,rep(1996,49),rep(1997,49),rep(1998,49),rep(1999,49),rep(2000,49),rep(2001,49)
,rep(2002,49),rep(2003,49),rep(2004,49),rep(2005,49),rep(2006,49),rep(2007,49)
,rep(2008,49),rep(2009,49),rep(2010,49),rep(2011,49),rep(2012,49),rep(2013,49)
,rep(2014,49),rep(2015,49),rep(2016,49),rep(2017,49),rep(2018,49))
shif_years <- years[c((49*3+1):(49*N))] # years vector, without the first three years
mydata_staz <- data.frame(rep(states,26),shif_years,dif3rate,shifrate) # new dataframe
mydata_fix <- data.frame(rep(states,29),years,fix_rate)
mydata_fix
ohio_measures <- subset(mydata_fix, mydata_fix$rep.states..29. == "ohio")
ohio<-data.frame(ohio_measures,low,ohioNA,high)
ggplot(data.frame(x = 1990:2018, y = ohio$ohioNA, ylow = ohio$low, yup = ohio$high) ) +
geom_line(aes(x = x, y = y), lty = 2, col = "red") + theme_bw() +
geom_line(data = data.frame(Y = ohio$fix_rate, x = 1990:2018), aes(x = x, y = Y), col = "blue") +
geom_ribbon(aes(ymin = ylow, ymax = yup, x = x), alpha = 0.1, col="lightblue") +
ggtitle("Observed vs sampled Ohio Birth rate values")
ohio_measures
ohioNA
idaho_measures <- subset(mydata_fix, mydata_fix$rep.states..29. == "idaho")
idaho<-data.frame(idaho_measures,low,idahoNA,high)
ggplot(data.frame(x = 1990:2018, y = idaho$idahoNA, ylow = idaho$low, yup = idaho$high) ) +
geom_line(aes(x = x, y = y), lty = 2, col = "red") + theme_bw() +
geom_line(data = data.frame(Y = idaho$fix_rate, x = 1990:2018), aes(x = x, y = Y), col = "blue") +
geom_ribbon(aes(ymin = ylow, ymax = yup, x = x), alpha = 0.1, col="lightblue") +
ggtitle("Observed vs sampled Idaho Birth rate values")
